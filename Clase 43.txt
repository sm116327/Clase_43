Windows PowerShell
Copyright (C) Microsoft Corporation. Todos los derechos reservados.


PS C:\Users\Marcos S\PycharmProjects\Clase_43> git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .idea/
        main.py

nothing added to commit but untracked files present (use "git add" to track)
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   .gitignore

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        main.py
no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git add .
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git status
Your branch is up to date with 'origin/main'.

  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore
        new file:   main.py

PS C:\Users\Marcos S\PycharmProjects\Clase_43> git commit -m "Modifique el git ignore y agregue el archivo main"
[main f88fc89] Modifique el git ignore y agregue el archivo main
 2 files changed, 3 insertions(+)
 create mode 100644 main.py
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git push
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/sm116327/Clase_43.git/'
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

PS C:\Users\Marcos S\PycharmProjects\Clase_43> git config --global user.email "bob@example.com"
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git config --global user.email "savymarcos@gmail.com"
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git push                                                                                        
info: please complete authentication in your browser...
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 6 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 381 bytes | 381.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   main.py
no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git add .
PS C:\Users\Marcos S\PycharmProjects\Clase_43> get status
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente el nombre o, si   
incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get status
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   main.py

PS C:\Users\Marcos S\PycharmProjects\Clase_43> git commit -m "Actualice el codigo segun jupyter"
[main 13439d9] Actualice el codigo segun jupyter
 1 file changed, 9 insertions(+)
PS C:\Users\Marcos S\PycharmProjects\Clase_43> git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 6 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 438 bytes | 438.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/sm116327/Clase_43.git
   f88fc89..13439d9  main -> main
PS C:\Users\Marcos S\PycharmProjects\Clase_43> 
